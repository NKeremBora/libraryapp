services:

  database:
    container_name: database
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: librarydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - libraryNetwork

  libraryapp:
    image: 'libraryapp:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: libraryapp
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      - server.port=8080
      - server.address=0.0.0.0
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - spring.datasource.url=jdbc:postgresql://database:5432/librarydb
    depends_on:
      - database
    networks:
      - libraryNetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - libraryNetwork

  grafana:
    image: "grafana/grafana-oss:latest"
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana/data:/var/lib/grafana/data
      - ./data/grafana/dashboards:/var/lib/grafana/dashboards
      - ./data/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123!
      - GF_SERVER_DOMAIN=localhost
    depends_on:
      - prometheus
    networks:
      - libraryNetwork

  alertmanager:
    build:
      context: ./data/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    networks:
      - libraryNetwork


volumes:
  postgres-data:

networks:
  libraryNetwork: