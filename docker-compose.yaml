services:

  database:
    container_name: database
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: librarydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - libraryNetwork

#  libraryapp:
#    image: 'libraryapp:latest'
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: libraryapp
#    restart: on-failure
#    ports:
#      - "8080:8080"
#    environment:
#      - server.port=4110
#      - spring.datasource.username=postgres
#      - spring.datasource.password=postgres
#      - spring.datasource.url=jdbc:postgresql://database:5432/librarydb
#    depends_on:
#      - database
#      - sonarqube
#    networks:
#      - libraryNetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./data/prometheus/config:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - libraryNetwork

  grafana:
    image: "grafana/grafana-oss:latest"
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./data/grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - libraryNetwork

  alertmanager:
    build:
      context: ./data/alertmanager
      dockerfile: Dockerfile
    container_name: alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    networks:
      - libraryNetwork

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - database
    networks:
      - libraryNetwork

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:

networks:
  libraryNetwork: